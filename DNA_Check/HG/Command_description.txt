# 从一个file2中删除file1出现过的内容
grep -v -f file2 file2

# 得到的hg19.bed 文件是原来的hg19基因组处理之后的文件

# 得到intergene的BED文件
bedtools complement -i HG_gtf/gene.bed -g chromInfo.txt > Intergenic.bed 

#从hg19.gtf得到exon.bed文件
cat gencode.v36.annotation.gtf | grep exon | grep -v CDS | grep -v start | grep -v stop| grep -v UTR| 
cut -f 1,3,4,5,7,9 | sed 's/\..*$//g' | sed 's/gene_id "//g'| awk '{print $1"\t" $3"\t" $4"\t" $2"\t" $6 "\t" $5}' | uniq > exon.bed

# 从exon.bed文件往上游取500得到promoter的bed文件
cat transcript.bed | awk '{start = $2-500} {end = $2} {print $1 "\t" start "\t" end "\tpromoter\t"$5 "\t"$6}' | sort | uniq > promoter_w.bed

#从exon.bed文件中得到downstream.bed文件中得到downstream文件
cat transcript.bed | awk '{start = $3} {end = $3+500} {print $1 "\t" start "\t" end "\tdownstream\t"$5 "\t"$6}' | sort | uniq> downstream.bed

#对hg19.gtf处理，得到所有的transcript.bed
cat gencode.v36.annotation.gtf | grep transcript| grep -v exon | cut -f 1,3,4,5,7,9 | sed 's/\..*$//g' | 
sed 's/gene_id "//g' | awk '{print $1"\t" $3"\t" $4"\t" $2"\t" $6 "\t" $5}' | uniq > transcript.bed


#得到gene.bed: 下面这行命令行主要是对hg19.gtf文件进行处理，得到所有的gene和起始长度终点长度和gene_ID，最终的文件存在gene.bed中
cat gencode.v36.annotation.gtf | grep -v transcript | cut -f 1,3,4,5,7,9 | sed 's/\..*$//g' | sed 's/gene_id "//g'|
 awk '{print $1"\t" $3"\t" $4"\t" $2"\t" $6 "\t" $5}' > gene.bed

#上面得到的总的hg19的文件再和之前的overlapp_G4s, RNA_G4s相交(intersection)得到相关的G4的gene_id,最后再对这个文件进行uniq的操作


